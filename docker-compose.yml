version: "3"

services:
  dev:
    container_name: nestjs_backend_dev
    image: nestjs-api-dev:1.0.0
    build: ./backend-v2
    command: npm run start:debug
    ports:
        - 3000:3000
        - 9229:9229
    networks:
        - nestjs-network
    volumes:
        - .:/usr/src/app
        - /usr/src/app/node_modules
    restart: unless-stopped
  # prod:
  #   container_name: nestjs_api_prod
  #   image: nestjs-api-prod:1.0.0
  #   build:
  #       context: .
  #       target: production
  #       dockerfile: ./backend-v2/Dockerfile
  #   command: npm run start:prod
  #   ports:
  #       - 3000:3000
  #       - 9229:9229
  #   networks:
  #       - nestjs-network
  #   volumes:
  #       - .:/usr/src/app
  #       - /usr/src/app/node_modules
  #   restart: unless-stopped
  sql:
    container_name: mysql_nest
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD={MYSQL_ROOT_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - compose-lesson:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
    - nestjs-network
  app:
    build: ./frontend
    depends_on:
      - dev
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/public:/usr/share/nginx/html
    networks:
      - nestjs-network
    ports:
      - 80:80
volumes:
  compose-lesson: {}

networks:
  nestjs-network:
